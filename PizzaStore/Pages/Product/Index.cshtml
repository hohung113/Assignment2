@page
@model PizzaStore.Pages.Product.IndexModel

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form method="get" asp-page="Index" class="mb-3">
    <div class="input-group">
        <input type="text" name="searchTerm" class="form-control" placeholder="Search products..." aria-label="Search products" />
        <button class="btn btn-primary" type="submit">Search</button>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].QuantityPerUnit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products[0].Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.QuantityPerUnit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                <td>
                    <img src="@item.ProductImage" alt="Product Image" style="max-width: 100px; max-height: 100px;" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
                </td>
                <td>
                    @if (User.IsInRole("Staff"))
                    {
                        <a asp-page="./Edit" asp-route-id="@item.ProductID">Edit</a>
                        <a asp-page="./Delete" asp-route-id="@item.ProductID">Delete</a>
                    }
                    else
                    {
                        <a asp-page="./Details" asp-route-id="@item.ProductID">Details</a>
                        <br />
                        <form method="post" asp-page-handler="AddToCart" id="form_@item.ProductID" data-ajax="true" data-ajax-method="post" data-ajax-mode="replace" data-ajax-update="#cart-response">
                            <input type="number" name="quantity" id="quantity_@item.ProductID" min="1" value="1" style="width: 50px;" />
                            <input type="hidden" name="productId" value="@item.ProductID" />
                            <input type="hidden" id="availableQuantity_@item.ProductID" value="@item.QuantityPerUnit" />
                            <div class="form-group">
                                <input type="submit" value="Add to Cart" class="btn btn-primary" />
                            </div>
                        </form>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<!-- Popup modal -->
<div id="popup" style="display:none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);
                       background-color: white; padding: 20px; border: 1px solid #ccc; box-shadow: 0px 4px 6px rgba(0,0,0,0.1);">
    <p id="popup-message"></p>
    <button onclick="closePopup()">Close</button>
</div>

<script>



    document.addEventListener('DOMContentLoaded', function () {
        const forms = document.querySelectorAll('form[asp-page-handler="AddToCart"]');

        forms.forEach(function (form) {
            form.addEventListener('submit', function (event) {
                const productId = form.id.split('_')[1];
                const enteredQuantity = parseInt(document.getElementById('quantity_' + productId).value, 10);
                const availableQuantity = parseInt(document.getElementById('availableQuantity_' + productId).value, 10);
                if (enteredQuantity > availableQuantity) {
                    showPopup("The entered quantity exceeds the available stock!");
                    event.preventDefault();
                }
            });
        });
    });

    function showPopup(message) {
        const popup = document.getElementById('popup');
        const popupMessage = document.getElementById('popup-message');
        popupMessage.textContent = message;
        popup.style.display = 'block';
    }

    function closePopup() {
        const popup = document.getElementById('popup');
        popup.style.display = 'none';
    }

</script>
